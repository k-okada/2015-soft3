perm([],[]).
perm(Xs, [Z | Zs]) :- select(Z, Xs, Ys), perm(Ys, Zs).

queen(Q) :- perm([1,2,3,4,5], Q), safe(Q), board(Q).
safe([Qt | Qr]) :- not(attack(Qt, Qr)), safe(Qr).
safe([]).



attack(X, Xs) :- attack_sub(X, 1, Xs).
attack_sub(X, N, [Y|Ys]) :- (X =:= Y + N ; X =:= Y - N).
attack_sub(X, N, [Y|Ys]) :- N1 is N + 1, attack_sub(X, N1, Ys).


board([]).
board([F | R]) :-
    (F =:= 1, write('OXXXX'),nl);
    (F =:= 2, write('XOXXX'),nl);
    (F =:= 3, write('XXOXX'),nl);
    (F =:= 4, write('XXXOX'),nl);
    (F =:= 5, write('XXXXO'),nl);
    board(R).
