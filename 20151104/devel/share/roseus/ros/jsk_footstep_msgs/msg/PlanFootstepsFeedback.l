;; Auto-generated. Do not edit!


(when (boundp 'jsk_footstep_msgs::PlanFootstepsFeedback)
  (if (not (find-package "JSK_FOOTSTEP_MSGS"))
    (make-package "JSK_FOOTSTEP_MSGS"))
  (shadow 'PlanFootstepsFeedback (find-package "JSK_FOOTSTEP_MSGS")))
(unless (find-package "JSK_FOOTSTEP_MSGS::PLANFOOTSTEPSFEEDBACK")
  (make-package "JSK_FOOTSTEP_MSGS::PLANFOOTSTEPSFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude PlanFootstepsFeedback.msg.html


(defclass jsk_footstep_msgs::PlanFootstepsFeedback
  :super ros::object
  :slots (_feedback ))

(defmethod jsk_footstep_msgs::PlanFootstepsFeedback
  (:init
   (&key
    ((:feedback __feedback) (instance jsk_footstep_msgs::FootstepArray :init))
    )
   (send-super :init)
   (setq _feedback __feedback)
   self)
  (:feedback
   (&rest __feedback)
   (if (keywordp (car __feedback))
       (send* _feedback __feedback)
     (progn
       (if __feedback (setq _feedback (car __feedback)))
       _feedback)))
  (:serialization-length
   ()
   (+
    ;; jsk_footstep_msgs/FootstepArray _feedback
    (send _feedback :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; jsk_footstep_msgs/FootstepArray _feedback
       (send _feedback :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; jsk_footstep_msgs/FootstepArray _feedback
     (send _feedback :deserialize buf ptr-) (incf ptr- (send _feedback :serialization-length))
   ;;
   self)
  )

(setf (get jsk_footstep_msgs::PlanFootstepsFeedback :md5sum-) "1e363bf8a3266ad230848f7d035157d5")
(setf (get jsk_footstep_msgs::PlanFootstepsFeedback :datatype-) "jsk_footstep_msgs/PlanFootstepsFeedback")
(setf (get jsk_footstep_msgs::PlanFootstepsFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# feedback
FootstepArray feedback

================================================================================
MSG: jsk_footstep_msgs/FootstepArray
Header header
Footstep[] footsteps
================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: jsk_footstep_msgs/Footstep
uint8 RIGHT=2
uint8 LEFT=1

# Constants to visualize progress
uint8 REJECTED=3
uint8 APPROVED=4

uint8 leg
geometry_msgs/Pose pose
duration duration
# optional parameters
uint32 footstep_group
geometry_msgs/Vector3 dimensions
float32 swing_height
float32 cost

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of postion and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

================================================================================
MSG: geometry_msgs/Vector3
# This represents a vector in free space. 

float64 x
float64 y
float64 z
")



(provide :jsk_footstep_msgs/PlanFootstepsFeedback "1e363bf8a3266ad230848f7d035157d5")


