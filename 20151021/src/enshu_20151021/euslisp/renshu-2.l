#!/usr/bin/env irteusgl

(load "lib/llib/unittest.l")
(init-unit-test)
(send *unit-test* :clear-result)
;; DO NOT EDIT BEFORE THIS LINE

(defun make-servo nil
  (let (b1 b2)
    (setq b1 (make-cube 35 20 46))
    (send b1 :locate #f(9.5 0 0))
    (setq b2 (make-cylinder 3 60))
    (send b2 :locate #f(0 0 -30))
    (setq b1 (body+ b1 b2))
    (send b1 :set-color :gray20)
    b1))

(defun make-hinji nil
  (let ((b2 (make-cube 22 16 58))
       (b1 (make-cube 26 20 54)))
    (send b2 :locate #f(-4 0 0))
    (setq b2 (body- b2 b1))
    (send b2 :set-color :gray80)
    b2))

(defclass servo-model
  :super cascaded-link
  :slots (h1 s1 j1))
(defmethod servo-model
  (:init ()
         (let ()
           (send-super :init)
           (setq h1 (instance bodyset-link :init (make-cascoords) :bodies (list (make-hinji))))
           (setq s1 (instance bodyset-link :init (make-cascoords) :bodies (list (make-servo))))
           (setq j1 (instance linear-joint :init :parent-link h1 :child-link s1 :axis :x))
           ;;instance cascaded coords
           (setq links (list h1 s1))
           (setq joint-list (list j1))
           (send self :assoc h1)
           (send h1 :assoc s1)
           (send self :init-ending)     
           self))
  (:j1 (&rest args) (forward-message-to j1 args))
  )

(setq r (instance servo-model :init))
(objects (list r))
(setq i 0) 
(do-until-key
    (send r :angle-vector (float-vector (* 3 (sin (/ i 100.0)))))
    (send *irtviewer* :draw-objects)
    (incf i))
;; 2)
;; サーボモジュールを参考に直動ジョイント(linear-joint)を使ったアクチュエータを作ってみよ．

;; DO NOT EDIT AFTER THIS LINE
(send *unit-test* :print-result)
(exit 1)




